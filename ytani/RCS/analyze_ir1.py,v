head	1.3;
access;
symbols;
locks
	pi:1.3; strict;
comment	@# @;


1.3
date	2018.03.21.11.42.43;	author pi;	state Exp;
branches;
next	1.2;

1.2
date	2018.03.21.10.36.13;	author pi;	state Exp;
branches;
next	1.1;

1.1
date	2018.03.21.08.09.01;	author pi;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@#!/usr/bin/env python3
# $Id: analyze_ir1.py,v 1.2 2018/03/21 10:36:13 pi Exp pi $
# -*- coding: utf-8 -*-
# 日本語

import sys
import os

def main():
    if len(sys.argv) != 2:
        print('usage:')
        print(' $ mode2 | tee filename')
        print(' < Push button(s) >')
        print(' [Ctrl]-[C]')
        print(' $ {0} filename'.format(os.path.basename(sys.argv[0])))
        exit(1)

    filename = sys.argv[1]
    f = open(filename, "r")

    line = f.readline()
    while not 'space ' in line:
        line = f.readline()
    #print(line)

    vlist = []
    vptnlist = []
    for line in f:
        [key, value] = line.split()
        value = int(value)
        if value > 10000:
            value = 10000

        vptnlist.append(value)
        if key == 'pulse':
            a = [value]
        else:
            a.append(value)
            vlist.append(a)

    f.close()

    if key == 'pulse':
        vptnlist.append(999999)
        a.append(999999)
        vlist.append(a)

    print('vlist =', vlist)

    vptnlist = sorted(list(set(vptnlist)))
    print('vptnlist =', vptnlist)

    v_min = min(vptnlist)
    print('v_min =', v_min)

    sum = 0
    count = 0
    for [v1, v2] in vlist:
        if v1/v_min < 1.1:
            sum += v1
            count += 1
        if v2/v_min < 1.1:
            sum += v2
            count += 1
    v_min2 = int(sum / count)
    print('v_min2 =', v_min2)

    sig_list = []
    for v in vlist:
        v1 = []
        for vv in v:
            vv = round(float('{0:.1g}'.format(vv/v_min2)))
            v1.append(vv)
        sig_list.append(v1)
    print('sig_list =', sig_list)

    sig_ptn_list = []
    for v in sig_list:
        key = str(v)
        flag1 = False
        for k in sig_ptn_list:
            if k == key:
                flag1 = True
        if not flag1:
            sig_ptn_list.append(key)
    print('sig_ptn_list = ', sig_ptn_list)

    sym_str = '-01/ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    print('sym_str = \''+sym_str+'\'')

    bit_count = 0
    for v in sig_list:
        key = str(v)
        idx = sig_ptn_list.index(key)
        ch = sym_str[idx]
        print(ch, end='')
        if ch == '0' or ch == '1':
            bit_count += 1
            if bit_count == 4:
                print(' ', end='')
                bit_count = 0
        else:
            bit_count = 0

        if ch == '/':
            print()

    print()


if __name__ == '__main__':
    main()
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: analyze_ir1.py,v 1.1 2018/03/21 08:09:01 pi Exp pi $
d11 5
a15 1
        print('usage: {0} filename'.format(os.path.basename(sys.argv[0])))
d24 1
a24 1
    print(line)
d50 1
a50 1
    vptnlist = list(set(vptnlist))
d68 8
a75 6
    vlist2 = []
    for [v1, v2] in vlist:
        v1 = round(v1/v_min2)
        v2 = round(v2/v_min2)
        vlist2.append([v1, v2])
    print('vlist2 =', vlist2)
d77 2
a78 2
    plist = []
    for v in vlist2:
d81 1
a81 1
        for k in plist:
d85 2
a86 2
            plist.append(key)
    print('plist = ', plist)
d89 2
d92 1
a92 1
    for v in vlist2:
d94 1
a94 1
        idx = plist.index(key)
d99 1
a99 1
            if bit_count == 8:
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id:$
d20 1
a20 1
    #print(line)
d23 1
a23 1
    v_min = 9999999
a24 1
        #print(line.strip())
a25 2
#        marume=1
#        value = round(int(value)/marume)*marume
d27 4
a30 2
        if value < v_min:
            v_min = value
d37 2
d40 1
d44 4
a47 1
    f.close()
d49 1
a49 1
    print('vlist =', vlist)
d66 2
a67 2
        v1 = round(v1/v_min2,1)
        v2 = round(v2/v_min2,1)
a70 1

d82 2
a83 1
    sym_str = '-01ABCDEFGHIJKLMNOPQRSTUVWXYZ'
d87 13
a99 1
        print(sym_str[idx], end='')
@
